	GIT

VCS (sistema de control de versiones):


----INICIANDO GIT----
#
  -->Identificandonos en Git:
	git config --global <user/core/merge>.<name,email/editor/tool>

  -->comprobando datos:
	git config --list/git config <user/core/merge>.<name/editor/tool>
	
  *git help <command> -> ayuda.

#
  -->Iniciando un proyecto en Git:
	git init -> proyecto vacio
	git add <files> -> rastrear proyecto existente
	git add <files> -> agregar a Staging Area(area de ensayo)


Tres areas principales:

1) Working directory(directorio de trabajo)
2) Staging area (area de ensayo)
2) Git directory (repositorio)

  -->Los avances en el area de trabajo son AGREGADOS al area de ensayo:
	git add <file>/git add * = todo

  -->Los archivos del area de ensayo se agregan finalmente al repositorio:
	git commit <file>/git commit <file> -m'<mensaje>'

  -->Agregar los archivos 'tracked' directamente al repositorio:
	git commit -a/git commit -a -m'<mensaje>'


----COMPARAR LAS MODIFICACIONES REALIZADAS----
#
  -->Cambios añadidos entre <modified> y <staged>:
	git diff <file>

  -->Cambios añadidos entre <staged> y <commited>:
	git diff --cached <file>


----ELIMINAR ARCHIVOS----
#
  -->Eliminar archivo como cambio no registrado(staged):
	rm <file>

  -->Eliminar archivo sin ser registrado(deleted):
	git rm <file>
	*recomendado en la mayoria de los casos

  -->Cancelar seguimiento de archivo(untracked):
	git rm --cached <file>

----RENOMBRAR ARCHIVOS----
#
  -->Renombrar archivo como cambio no registrado(deleted&untracked = staged):
	mv <file_from> <file_to>
  -->Renombrar archivo sin ser registrado(renamed):
	git mv <file_from> <file_to>

..............................................................................
